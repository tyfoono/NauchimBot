from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.dispatcher import Dispatcher

eventsLinks = {
    'TechnoCom':'vk.com/technocom2022',
    'IT-fest_2022':'vk.com/itfest2022',
    'IASF2022':'vk.com/aerospaceproject'
}

bot = Bot(token='5123538287:AAH7uCEmaKXEYXQ9zspgziNEcb4AKIxKFjI')
dp = Dispatcher(bot)

back_button = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='start')
back_kb = types.InlineKeyboardMarkup().add(back_button)

buttonLinks = types.KeyboardButton('–ö–æ–Ω—Ç–∞–∫—Ç—ã ü§ô')
startKb = types.ReplyKeyboardMarkup(one_time_keyboard=True)
startKb.add(buttonLinks)

eventsButton = types.

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    chat_id = message.chat.id
    first_name = message.chat.first_name
    text = f'–ü—Ä–∏–≤–µ—Ç, {first_name}!üëã\n'
    await bot.send_message(chat_id, text, reply_markup=startKb)

@dp.message_handler(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã ü§ô', commands=['contacts'])
async def contacts(message: types.Message):
    chat_id = message.chat.id
    text = '–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ –≤–æ–ø—Ä–æ—Å—ã, —Ç–æ –≤–æ—Ç –Ω–∞—à–∏–∫–æ–Ω—Ç–∞–∫—Ç—ã:\n –ì—Ä—É–ø–ø–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ –ù–∞—É—á–∏–º.online https://vk.com/nauchim.online\n –°–∞–π—Ç —Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏ https://www.–Ω–∞—É—á–∏–º.online'
    await bot.send_message(chat_id, text, reply_markup=back_kb)

@dp.message_handler(text='–°–ø–∏—Å–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π üíª', commands=['list'])
async def events(message: types.Message):
    chat_id = message.chat.id
    text = ''
    await bot.send_message(chat_id, text)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏–π

@dp.callback_query_handler(text='start')
async def back_to_start(call: types.CallbackQuery):
    chat_id = call.message.chat.id
    first_name = call.message.chat.first_name
    text = f'–ü—Ä–∏–≤–µ—Ç, {first_name}!üëã\n'
    await bot.send_message(chat_id, text, reply_markup=startKb)

executor.start_polling(dp)